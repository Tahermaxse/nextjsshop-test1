{
  "name": "button-01",
  "type": "registry:block",
  "files": [
    {
      "type": "registry:block",
      "content": "import React from 'react';\r\nimport './Button.css'; \r\n\r\nconst Button01 = () => {\r\n  return (\r\n    <a href=\"#\" className=\"button01\">\r\n      <span className=\"button01_bg\">\r\n        <span className=\"button01_bg-mid\"></span>\r\n        <span className=\"button01_bg-right\">\r\n          {[...Array(25)].map((_, index) => (\r\n            <span\r\n              key={`pixel-${index}`}\r\n              style={{ '--index': Math.floor(Math.random() * 4) } as React.CSSProperties}\r\n              className=\"button01_bg-pixel\"\r\n            ></span>\r\n          ))}\r\n        </span>\r\n        <span className=\"button01_bg-right-overlay\">\r\n          {[...Array(11)].map((_, index) => (\r\n            <span\r\n              key={`overlay-${index}`}\r\n              style={{ '--index': 4 + Math.floor(Math.random() * 4) }as React.CSSProperties}\r\n              className=\"button01_bg-pixel\"\r\n            ></span>\r\n          ))}\r\n        </span>\r\n      </span>\r\n      <span data-text=\"MintlifyUI\" className=\"button01_inner\">\r\n        <span className=\"button01_text\">MintlifyUI</span>\r\n      </span>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Button01;",
      "path": "block/Button/button-01/button.tsx",
      "target": "components/block/Button/button-01/button.tsx"
    },
    {
      "type": "registry:block",
      "content": ".button01 {\r\n    color: #f9f4eb;\r\n    letter-spacing: -.02em;\r\n    text-transform: uppercase;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    font-size: .875rem;\r\n    line-height: 1em;\r\n    text-decoration: none;\r\n    display: grid\r\n}\r\n\r\n.dark .button01 {\r\n    color: #000\r\n}\r\n\r\n.button01_bg {\r\n    grid-area: 1/1;\r\n    grid-template-columns: 1fr auto;\r\n    display: grid\r\n}\r\n\r\n.button01_bg-mid {\r\n    background-color: #000;\r\n}\r\n\r\n\r\n.dark .button01_bg-mid {\r\n    background-color: #fff;\r\n}\r\n\r\n\r\n\r\n.button01_bg-right {\r\n    grid-area: 1/2;\r\n    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    display: grid\r\n}\r\n\r\n.button01_bg-pixel {\r\n    aspect-ratio: 1;\r\n    background-color: #000;\r\n    width: 100%;\r\n    height: 100%\r\n}\r\n\r\n.dark .button01_bg-pixel {\r\n    background-color: #fff;\r\n}\r\n\r\n.button01_bg-right-overlay {\r\n    grid-area: 1/2;\r\n    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    display: grid\r\n}\r\n\r\n.button01_inner {\r\n    grid-area: 1/1;\r\n    padding: .875rem 3.75rem .875rem 1rem;\r\n    display: grid;\r\n    overflow: clip\r\n}\r\n\r\n.button01_text {\r\n    grid-area: 1/1\r\n}\r\n\r\n\r\n\r\n.button01 {\r\n\t--characters: 10; /* this needs to be the number of characters from the text */\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.button01_bg-pixel {\r\n\ttransition: opacity 0s;\r\n\ttransition-delay: calc(var(--index) * .06s);\r\n}\r\n\r\n.button01_bg-pixel:is(:nth-child(13)) {\r\n\topacity: 0;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel {\r\n\topacity: 0;\r\n  transition-delay: 0s;\r\n}\r\n\r\n.button01_inner::after {\r\n\tcontent: attr(data-text);\r\n  grid-area: 1 / 1;\r\n  pointer-events: none;\r\n  transition: width 0s;\r\n  white-space: nowrap;\r\n  width: 0;\r\n  overflow: clip;\r\n  opacity: 0;\r\n}\r\n\r\n/* position of pixel arrow */\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(1) {\r\n\tgrid-area: 1 / 2;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(2) {\r\n\tgrid-area: 1 / 3;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(3) {\r\n\tgrid-area: 1 / 4;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(4) {\r\n\tgrid-area: 1 / 5;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(5) {\r\n\tgrid-area: 2 / 4;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(6) {\r\n\tgrid-area: 2 / 5;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(7) {\r\n\tgrid-area: 3 / 3;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(8) {\r\n\tgrid-area: 3 / 5;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(9) {\r\n\tgrid-area: 4 / 2;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(10) {\r\n\tgrid-area: 4 / 5;\r\n}\r\n\r\n.button01_bg-right-overlay .button01_bg-pixel:nth-child(11) {\r\n\tgrid-area: 5 / 1;\r\n}\r\n\r\n\r\n@media (hover: hover) and (pointer: fine) {\r\n\t.button01:is(:hover, :focus-visible) .button01_inner::after {\r\n  \twidth: 100%;\r\n    opacity: 1;\r\n    transition: width .5s steps(var(--characters));\r\n  }\r\n  \r\n  .button01:is(:hover, :focus-visible) .button01_text {\r\n  \topacity: 0;\r\n  }\r\n  \r\n  .button01:is(:hover, :focus-visible) .button01_bg-right .button01_bg-pixel {\r\n  \topacity: 0;\r\n  }\r\n  \r\n  .button01:is(:hover, :focus-visible) .button01_bg-right-overlay .button01_bg-pixel {\r\n  \topacity: 1;\r\n    transition-delay: calc(var(--index) * .06s);\r\n  }\r\n}\r\n\r\n/* style only for touch devices */\r\n@media (hover: none) or (pointer: coarse) {\r\n  .button-pixel-broke_bg-pixel {\r\n    transition: opacity .2s;\r\n  }\r\n\r\n   .button01:active .button01_bg-right .button01_bg-pixel {\r\n  \topacity: 0;\r\n    transition: opacity 0s;\r\n  }\r\n  \r\n  .button01:active .button01_bg-right-overlay .button01_bg-pixel {\r\n  \topacity: 1;\r\n    transition: opacity 0s;\r\n  }\r\n}\r\n",
      "path": "block/Button/button-01/Button.css",
      "target": "components/block/Button/button-01/Button.css"
    }
  ]
}