{
  "name": "authcard-05",
  "type": "registry:block",
  "registryDependencies": [
    "button",
    "input",
    "checkbox"
  ],
  "dependencies": [
    "lucide-react",
    "@hookform/resolvers/zod",
    "zod",
    "react-hook-form",
    "react-icons"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Eye, EyeOff, Mail } from \"lucide-react\";\nimport { FaUser } from \"react-icons/fa\";\n\nconst formSchema = z.object({\n  email: z.string().email({\n    message: \"Please enter a valid email address.\",\n  }),\n  password: z.string().min(1, {\n    message: \"Password is required.\",\n  }),\n  rememberMe: z.boolean().optional(),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function AuthCard05() {\n  const [showPassword, setShowPassword] = useState(false);\n  const { toast } = useToast();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    watch,\n    formState: { errors, isSubmitting },\n  } = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    },\n  });\n\n  const rememberMe = watch(\"rememberMe\");\n\n  const onSubmit = async (data: FormValues) => {\n    try {\n      // Simulate API call\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      console.log(\"Form submitted:\", data);\n\n      toast({\n        title: \"Login successful\",\n        description: \"You have successfully logged in.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Invalid email or password. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleClearPassword = () => {\n    reset({ password: \"\" }, { keepValues: false });\n  };\n\n  const handleRememberMeChange = (checked: boolean) => {\n    setValue(\"rememberMe\", checked, { shouldValidate: true });\n  };\n\n  return (\n    <div className=\"w-full max-w-[400px] rounded-[22px] bg-[#ffffff] p-6 shadow-md dark:bg-zinc-800 sm:p-8\">\n      <div className=\"mb-6 flex flex-col items-center\">\n        <div className=\"relative flex items-center justify-center h-24 w-24\">\n          <div\n            className=\"absolute inset-0 rounded-full bg-gradient-to-b from-neutral-300/40 via-white/10 to-white/0 dark:from-white/10 dark:via-black/10 dark:to-black/0\n\"\n          />\n          <div className=\"relative z-10 flex h-12 w-12 items-center justify-center rounded-full bg-white shadow-sm ring-1 ring-zinc-200\">\n            <FaUser className=\"h-5 w-5 text-zinc-600\" />\n          </div>\n        </div>\n\n        <h1 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n          Login to your account\n        </h1>\n        <p className=\"mt-1 text-center text-sm text-gray-600 dark:text-zinc-400\">\n          Enter your details to login.\n        </p>\n      </div>\n\n      <div className=\"mb-6 flex items-center justify-center\">\n        <div className=\"relative w-full\">\n          <hr />\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n        <div className=\"space-y-1\">\n          <label\n            htmlFor=\"email\"\n            className=\"text-sm font-medium text-gray-700 dark:text-zinc-300\"\n          >\n            Email Address\n          </label>\n          <div className=\"relative\">\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"hello@example.com\"\n              {...register(\"email\")}\n              className={`${\n                errors.email\n                  ? \"border-red-500\"\n                  : \"border-gray-300 dark:border-zinc-700\"\n              } bg-white py-2 pr-10 dark:bg-zinc-800 rounded-lg`}\n            />\n            <Mail className=\"absolute right-3 top-1/2 h-5 w-5 -translate-y-1/2 text-teal-500\" />\n          </div>\n          {errors.email && (\n            <p className=\"mt-1 flex items-center gap-2 text-sm font-medium text-red-500 border-l-2 border-red-500 pl-2 rounded-md bg-red-500/5\">{errors.email.message}</p>\n          )}\n        </div>\n\n        <div className=\"space-y-1\">\n          <div className=\"flex items-center justify-between\">\n            <label\n              htmlFor=\"password\"\n              className=\"text-sm font-medium text-gray-700 dark:text-zinc-300\"\n            >\n              Password\n            </label>\n            <button\n              type=\"button\"\n              onClick={handleClearPassword}\n              className=\"text-xs text-gray-500 hover:text-gray-700 dark:text-zinc-500 dark:hover:text-zinc-300\"\n            >\n              Clear\n            </button>\n          </div>\n          <div className=\"relative\">\n            <Input\n              id=\"password\"\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"••••••••••\"\n              {...register(\"password\")}\n              className={`${\n                errors.password\n                  ? \"border-red-500\"\n                  : \"border-gray-300 dark:border-zinc-700\"\n              } bg-white py-2 pr-10 dark:bg-zinc-800 rounded-lg`}\n            />\n            <button\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none dark:text-zinc-500 dark:hover:text-zinc-300\"\n              tabIndex={-1}\n            >\n              {showPassword ? (\n                <EyeOff className=\"h-5 w-5\" />\n              ) : (\n                <Eye className=\"h-5 w-5\" />\n              )}\n            </button>\n          </div>\n          {errors.password && (\n            <p className=\"mt-1 flex items-center gap-2 text-sm font-medium text-red-500 border-l-2 border-red-500 pl-2 rounded-md bg-red-500/5\">{errors.password.message}</p>\n          )}\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox\n              id=\"rememberMe\"\n              checked={rememberMe}\n              onCheckedChange={handleRememberMeChange}\n              className=\"h-4 w-4 border-gray-300 text-blue-600 focus:ring-blue-500 dark:border-zinc-700 data-[state=checked]:bg-blue-500 dark:data-[state=checked]:text-white\"\n            />\n            <label\n              htmlFor=\"rememberMe\"\n              className=\"text-sm text-gray-700 dark:text-zinc-300\"\n            >\n              Keep me logged in\n            </label>\n          </div>\n          <Link\n            href=\"/forgot-password\"\n            className=\"text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-500 dark:hover:text-blue-400\"\n          >\n            Forgot password?\n          </Link>\n        </div>\n\n        <Button\n          type=\"submit\"\n          className=\"mt-6 w-full rounded-lg from-blue-600 to-blue-500 text-white bg-gradient-to-t \n    border border-b-2 border-blue-900/40 shadow-md shadow-blue-900/20 \n    ring-1 ring-inset ring-white/25 \n    transition-[filter] duration-200 hover:brightness-110 active:brightness-90 \n    dark:shadow-[inset_0_1px_3px_0_rgba(255,255,255,0.1)] \n    dark:border-x-0 dark:border-t-0 dark:border-blue-900/50 \n    dark:ring-white/5 dark:from-blue-700 dark:to-blue-600\"\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? \"Processing...\" : \"Login\"}\n        </Button>\n\n        <div className=\"mt-4 text-center text-sm text-gray-600 dark:text-zinc-400\">\n          Don&apos;t have an account?{\" \"}\n          <Link\n            href=\"/signup\"\n            className=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-500 dark:hover:text-blue-400\"\n          >\n            Register\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n",
      "path": "block/AuthCard/authcard-05/authcard.tsx",
      "target": "components/block/AuthCard/authcard-05/authcard.tsx"
    }
  ]
}