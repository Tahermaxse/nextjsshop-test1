{
  "name": "button-05",
  "type": "registry:block",
  "files": [
    {
      "type": "registry:block",
      "content": "import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button05 = () => {\r\n  // Function to generate dot elements for the icons\r\n  const renderDots = () => {\r\n    const dotValues = [2, 1, 0, 1, 2];\r\n    return dotValues.map((value, index) => (\r\n      <span \r\n        key={`dot-${index}`} \r\n        className=\"button05_dot\"\r\n        style={{ '--index': value }as React.CSSProperties} \r\n      ></span>\r\n    ));\r\n  };\r\n\r\n  // Function to generate icon elements with dots\r\n  const renderIcons = () => {\r\n    return [3, 2, 1, 0].map((indexParent) => (\r\n      <span \r\n        key={`icon-${indexParent}`} \r\n        className=\"button05_icon\"\r\n        style={{ '--index-parent': indexParent }as React.CSSProperties} \r\n      >\r\n        {renderDots()}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <a href=\"#\" className=\"button05 w-inline-block\">\r\n      <span className=\"button05_bg\"></span>\r\n      <span \r\n        data-text=\"Arrow-Dots\" \r\n        className=\"button05_inner\"\r\n      >\r\n        <span className=\"button05_text\">Arrow-Dots</span>\r\n        <span className=\"button05_icon-wrap\">\r\n          {renderIcons()}\r\n        </span>\r\n      </span>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Button05;",
      "path": "block/Button/button-05/button.tsx",
      "target": "components/block/Button/button-05/button.tsx"
    },
    {
      "type": "registry:block",
      "content": ".button05 {\r\n  color: #f9f4eb;\r\n  letter-spacing: -.02em;\r\n  text-transform: uppercase;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n  transform-style: preserve-3d;\r\n  font-size: .875rem;\r\n  line-height: 1em;\r\n  text-decoration: none;\r\n  display: grid\r\n}\r\n\r\n.button05_bg {\r\n  background-color: #000;\r\n  border-radius: .3125rem;\r\n  grid-area: 1/1;\r\n  overflow: clip\r\n}\r\n\r\n.button05_inner {\r\n  grid-gap: .625rem;\r\n  grid-area: 1/1;\r\n  padding: .875rem .625rem .875rem .75rem;\r\n  display: grid;\r\n  translate: 0\r\n}\r\n\r\n.button05_text {\r\n  grid-area: 1/1\r\n}\r\n\r\n.button05_icon-wrap {\r\n  grid-column-gap: .125rem;\r\n  grid-row-gap: .125rem;\r\n  grid-row: 1;\r\n  display: flex\r\n}\r\n\r\n.button05_icon {\r\n  grid-column-gap: .0625rem;\r\n  grid-row-gap: .0625rem;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  display: flex\r\n}\r\n\r\n.button05_dot {\r\n  margin-right: calc(var(--index)*.1875rem);\r\n  background-color: #f9f4eb;\r\n  border-radius: .0625rem;\r\n  width: .125rem;\r\n  height: .125rem;\r\n  display: block\r\n}\r\n\r\n.button05 {\r\n  --elastic-ease-out: linear(\r\n    0,\r\n    0.5737 7.6%,\r\n    0.8382 11.87%,\r\n    0.9463 14.19%,\r\n    1.0292 16.54%,\r\n    1.0886 18.97%,\r\n    1.1258 21.53%,\r\n    1.137 22.97%,\r\n    1.1424 24.48%,\r\n    1.1423 26.1%,\r\n    1.1366 27.86%,\r\n    1.1165 31.01%,\r\n    1.0507 38.62%,\r\n    1.0219 42.57%,\r\n    0.9995 46.99%,\r\n    0.9872 51.63%,\r\n    0.9842 58.77%,\r\n    1.0011 81.26%,\r\n    1\r\n  );\r\n  --smooth-ease: cubic-bezier(.32, .72, 0, 1);\r\n  --color-ease: cubic-bezier(.215, .61, .355, 1);\r\n  \r\n  transition: transform .45s var(--elastic-ease-out);\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.button05:active {\r\n\ttransform: scaleX(0.955) scaleY(0.954);\r\n}\r\n\r\n.button05_bg {\r\n\ttransition: background-color .2s var(--color-ease);\r\n}\r\n\r\n.button05_dot {\r\n\ttransition: scale .4s var(--smooth-ease), translate .45s var(--smooth-ease);\r\n}\r\n\r\n.button05_icon:first-child .button05_dot {\r\n\tscale: 0;\r\n}\r\n\r\n.button05_text {\r\n\ttransition: scale .45s var(--smooth-ease);\r\n  transform-origin: right center;\r\n}\r\n\r\n.button05_inner::before {\r\n\tcontent: attr(data-text);\r\n  grid-area: 1 / 1;\r\n  scale: 0;\r\n  pointer-events: none;\r\n  transition: scale .45s var(--smooth-ease);\r\n  transform-origin: left center;\r\n}\r\n\r\n@media (hover: hover) and (pointer: fine) {\r\n  .button05:is(:hover, :focus-visible) .button05_text {\r\n  \tscale: 0;\r\n  }\r\n  \r\n  .button05:is(:hover, :focus-visible) .button05_inner::before {\r\n  \tscale: 1;\r\n  }\r\n  \r\n  .button05:is(:hover, :focus-visible) .button05_icon:last-child .button05_dot {\r\n  \tscale: 0;\r\n    translate: .5625rem 0 0;\r\n    transition-delay: calc(var(--index) * .04s);\r\n  }\r\n  \r\n  .button05:is(:hover, :focus-visible) .button05_icon:nth-child(-n+3) .button05_dot {\r\n  \tscale: 1;\r\n  \ttranslate: .5625rem 0 0;\r\n    transition-delay: calc((var(--index) * .04s) + (var(--index-parent) * .07s));\r\n  }\r\n}\r\n\r\n/* active style only for touch devices */\r\n@media (hover: none) or (pointer: coarse) {\r\n\t.button05:active .button05_bg {\r\n  \tbackground-color: #4D4D4D;\r\n    transition-duration: 0s;\r\n  }\r\n}\r\n",
      "path": "block/Button/button-05/Button.css",
      "target": "components/block/Button/button-05/Button.css"
    }
  ]
}