{
  "name": "button-03",
  "type": "registry:block",
  "files": [
    {
      "type": "registry:block",
      "content": "import React from 'react';\r\nimport './Button.css'; \r\nconst Button03 = ({ text = \"Pixel-Broke\" }) => {\r\n  // Define the index patterns for left and right pixels\r\n  const leftPixelIndices = [0, 0, 1, 3, 4, 0, 0, 2, 0, 0, 0, 1];\r\n  const rightPixelIndices = [3, 0, 0, 0, 4, 0, 0, 2, 1, 3, 0, 0];\r\n\r\n  return (\r\n    <a href=\"#\" className=\"button03 w-inline-block\">\r\n      <span className=\"button03_bg\">\r\n        <span className=\"button03_bg-left\">\r\n          {leftPixelIndices.map((index, i) => (\r\n            <span\r\n              key={`left-${i}`}\r\n              style={{ '--index': index }as React.CSSProperties}\r\n              className=\"button03_bg-pixel\"\r\n            ></span>\r\n          ))}\r\n        </span>\r\n        <span className=\"button03_bg-mid\"></span>\r\n        <span className=\"button03_bg-right\">\r\n          {rightPixelIndices.map((index, i) => (\r\n            <span\r\n              key={`right-${i}`}\r\n              style={{ '--index': index }as React.CSSProperties}\r\n              className=\"button03_bg-pixel\"\r\n            ></span>\r\n          ))}\r\n        </span>\r\n      </span>\r\n      <span data-text={text} className=\"button03_inner\">\r\n        <span className=\"button03_text\">{text}</span>\r\n      </span>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Button03;",
      "path": "block/Button/button-03/button.tsx",
      "target": "components/block/Button/button-03/button.tsx"
    },
    {
      "type": "registry:block",
      "content": ".button03 {\r\n    color: #f9f4eb;\r\n    letter-spacing: -.02em;\r\n    text-transform: uppercase;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    font-size: .875rem;\r\n    line-height: 1em;\r\n    text-decoration: none;\r\n    display: grid\r\n}\r\n\r\n.button03_bg {\r\n    grid-area: 1/1;\r\n    grid-template-columns: auto 1fr auto;\r\n    display: grid\r\n}\r\n\r\n.button03_bg-left {\r\n    grid-template-rows: 1fr 1fr 1fr 1fr;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    display: grid\r\n}\r\n\r\n.button03_bg-pixel {\r\n    aspect-ratio: 1;\r\n    background-color: #000;\r\n    width: 100%;\r\n    height: 100%\r\n}\r\n\r\n.button03_bg-mid {\r\n    background-color: #000\r\n}\r\n\r\n.button03_bg-right {\r\n    grid-template-rows: 1fr 1fr 1fr 1fr;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    display: grid\r\n}\r\n\r\n.button03_inner {\r\n    grid-area: 1/1;\r\n    padding: .875rem 3rem;\r\n    display: grid\r\n}\r\n\r\n.button03_text {\r\n    grid-area: 1/1\r\n}\r\n\r\n.button03 {\r\n\t--characters: 11; /* this needs to be the number of characters from the text */\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.button03_bg-pixel {\r\n\ttransition: opacity 0s;\r\n  transition-delay: calc(var(--index) * .04s);\r\n}\r\n\r\n.button03_bg-left .button03_bg-pixel:nth-child(1) {\r\n\topacity: 0;\r\n}\r\n\r\n.button03_bg-right .button03_bg-pixel:nth-child(12) {\r\n\topacity: 0;\r\n}\r\n\r\n.button03_inner::after {\r\n\tcontent: attr(data-text);\r\n  grid-area: 1 / 1;\r\n  pointer-events: none;\r\n  transition: width 0s;\r\n  white-space: nowrap;\r\n  margin: 0 auto;\r\n  width: 0;\r\n  overflow: clip;\r\n  opacity: 0;\r\n}\r\n\r\n@media (hover: hover) and (pointer: fine) {\r\n  .button03:is(:hover, :focus-visible) .button03_bg-left .button03_bg-pixel:is(:nth-child(3), :nth-child(4), :nth-child(5), :nth-child(8), :nth-child(12)) {\r\n  \topacity: 0;\r\n  }\r\n  \r\n  .button03:is(:hover, :focus-visible) .button03_bg-right .button03_bg-pixel:is(:nth-child(1), :nth-child(5), :nth-child(8), :nth-child(9), :nth-child(10)) {\r\n  \topacity: 0;\r\n  }\r\n  \r\n  .button03:is(:hover, :focus-visible) .button03_inner::after {\r\n  \twidth: 100%;\r\n    opacity: 1;\r\n    transition: width .5s steps(var(--characters));\r\n  }\r\n  \r\n  .button03:is(:hover, :focus-visible) .button03_text {\r\n  \topacity: 0;\r\n  }\r\n}\r\n\r\n/* style only for touch devices */\r\n@media (hover: none) or (pointer: coarse) {\r\n  .button03_bg-pixel {\r\n    transition: opacity .2s;\r\n  }\r\n\r\n   .button03:active .button03_bg-left .button03_bg-pixel:is(:nth-child(3), :nth-child(4), :nth-child(5), :nth-child(8), :nth-child(12)) {\r\n  \topacity: 0;\r\n    transition: opacity 0s;\r\n  }\r\n  \r\n  .button03:active .button03_bg-right .button03_bg-pixel:is(:nth-child(1), :nth-child(5), :nth-child(8), :nth-child(9), :nth-child(10)) {\r\n  \topacity: 0;\r\n    transition: opacity 0s;\r\n  }\r\n}",
      "path": "block/Button/button-03/Button.css",
      "target": "components/block/Button/button-03/Button.css"
    }
  ]
}