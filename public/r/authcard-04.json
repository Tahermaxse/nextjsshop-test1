{
  "name": "authcard-04",
  "type": "registry:block",
  "registryDependencies": [
    "button",
    "input",
    "checkbox"
  ],
  "dependencies": [
    "lucide-react",
    "@hookform/resolvers/zod",
    "zod",
    "react-hook-form",
    "react-icons"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport Link from \"next/link\"\r\nimport Image from \"next/image\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { z } from \"zod\"\r\nimport { useToast } from \"@/hooks/use-toast\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { Eye, EyeOff, Mail } from \"lucide-react\"\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { FaApple } from \"react-icons/fa\";\r\nimport { FaLinkedin } from \"react-icons/fa6\";\r\n\r\nconst formSchema = z.object({\r\n  email: z.string().email({\r\n    message: \"Please enter a valid email address.\",\r\n  }),\r\n  password: z.string().min(1, {\r\n    message: \"Password is required.\",\r\n  }),\r\n  rememberMe: z.boolean().optional(),\r\n})\r\n\r\ntype FormValues = z.infer<typeof formSchema>\r\n\r\nexport default function AuthCard04() {\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const { toast } = useToast()\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    watch,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    },\r\n  })\r\n\r\n  const rememberMe = watch(\"rememberMe\")\r\n\r\n  const onSubmit = async (data: FormValues) => {\r\n    try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n      console.log(\"Form submitted:\", data)\r\n\r\n      toast({\r\n        title: \"Login successful\",\r\n        description: \"You have successfully logged in.\",\r\n      })\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Invalid email or password. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleClearPassword = () => {\r\n    reset({ password: \"\" }, { keepValues: false })\r\n  }\r\n\r\n  const handleRememberMeChange = (checked: boolean) => {\r\n    setValue(\"rememberMe\", checked, { shouldValidate: true })\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-[400px] rounded-[22px] bg-[#ffffff] p-6 shadow-md dark:bg-zinc-800 sm:p-8\">\r\n      <div className=\"mb-6 flex flex-col items-center\">\r\n       <Image src=\"/images/spectrum.svg\" alt=\"Logo\" width={70} height={70} className=\"mb-4\" />\r\n        <h1 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">Welcome back</h1>\r\n        <p className=\"mt-1 text-center text-sm text-gray-600 dark:text-zinc-400\">Please enter your details to login.</p>\r\n      </div>\r\n\r\n      <div className=\"mb-6 grid grid-cols-3 gap-3\">\r\n        <Button\r\n          variant=\"outline\"\r\n          className=\"flex rounded-lg items-center justify-center border-gray-300 bg-white text-gray-800 hover:bg-gray-50 dark:border-zinc-700 dark:bg-zinc-800 dark:text-zinc-200 dark:hover:bg-zinc-700\"\r\n          type=\"button\"\r\n        >\r\n          <FaLinkedin className=\"mr-2 h-5 w-5 text-[#0077B5]\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"outline\"\r\n          className=\"flex rounded-lg items-center justify-center border-gray-300 bg-white text-gray-800 hover:bg-gray-50 dark:border-zinc-700 dark:bg-zinc-800 dark:text-zinc-200 dark:hover:bg-zinc-700\"\r\n          type=\"button\"\r\n        >\r\n         <FcGoogle className=\"mr-2 h-5 w-5\" /> \r\n        </Button>\r\n        <Button\r\n          variant=\"outline\"\r\n          className=\"flex rounded-lg items-center justify-center border-gray-300 bg-white text-gray-800 hover:bg-gray-50 dark:border-zinc-700 dark:bg-zinc-800 dark:text-zinc-200 dark:hover:bg-zinc-700\"\r\n          type=\"button\"\r\n        >\r\n          <FaApple className=\"mr-2 h-5 w-5\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mb-6 flex items-center justify-center\">\r\n        <div className=\"relative w-full\">\r\n          <div className=\"absolute inset-0 flex items-center\">\r\n            <div className=\"w-full border-t border-gray-300 dark:border-zinc-700\"></div>\r\n          </div>\r\n          <div className=\"relative flex justify-center\">\r\n            <span className=\"bg-white px-4 text-xs text-gray-500 dark:bg-zinc-800 dark:text-zinc-500\">OR</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        <div className=\"space-y-1\">\r\n          <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700 dark:text-zinc-300\">\r\n            Email Address\r\n          </label>\r\n          <div className=\"relative\">\r\n            <Input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"hello@example.com\"\r\n              {...register(\"email\")}\r\n              className={`${\r\n                errors.email ? \"border-red-500\" : \"border-gray-300 dark:border-zinc-700\"\r\n              } bg-white py-2 pr-10 dark:bg-zinc-800 rounded-lg`}\r\n            />\r\n            <Mail className=\"absolute right-3 top-1/2 h-5 w-5 -translate-y-1/2 text-teal-500\" />\r\n          </div>\r\n          {errors.email && <p className=\"mt-1 flex items-center gap-2 text-sm font-medium text-red-500 border-l-2 border-red-500 pl-2 rounded-md bg-red-500/5\">{errors.email.message}</p>}\r\n        </div>\r\n\r\n        <div className=\"space-y-1\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700 dark:text-zinc-300\">\r\n              Password\r\n            </label>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleClearPassword}\r\n              className=\"text-xs text-gray-500 hover:text-gray-700 dark:text-zinc-500 dark:hover:text-zinc-300\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"relative\">\r\n            <Input\r\n              id=\"password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              placeholder=\"••••••••••\"\r\n              {...register(\"password\")}\r\n              className={`${\r\n                errors.password ? \"border-red-500\" : \"border-gray-300 dark:border-zinc-700\"\r\n              } bg-white py-2 pr-10 dark:bg-zinc-800 rounded-lg`}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none dark:text-zinc-500 dark:hover:text-zinc-300\"\r\n              tabIndex={-1}\r\n            >\r\n              {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n            </button>\r\n          </div>\r\n          {errors.password && <p className=\"mt-1 flex items-center gap-2 text-sm font-medium text-red-500 border-l-2 border-red-500 pl-2 rounded-md bg-red-500/5\">{errors.password.message}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Checkbox\r\n              id=\"rememberMe\"\r\n              checked={rememberMe}\r\n              onCheckedChange={handleRememberMeChange}\r\n              className=\"h-4 w-4 border-gray-300 text-blue-600 focus:ring-blue-500 dark:border-zinc-700 data-[state=checked]:bg-blue-500 dark:data-[state=checked]:text-white\"\r\n            />\r\n            <label htmlFor=\"rememberMe\" className=\"text-sm text-gray-700 dark:text-zinc-300\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n          <Link\r\n            href=\"/forgot-password\"\r\n            className=\"text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-500 dark:hover:text-blue-400\"\r\n          >\r\n            Forgot?\r\n          </Link>\r\n        </div>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"mt-6 w-full rounded-lg from-blue-600 to-blue-500 text-white bg-gradient-to-t \r\n    border border-b-2 border-blue-900/40 shadow-md shadow-blue-900/20 \r\n    ring-1 ring-inset ring-white/25 \r\n    transition-[filter] duration-200 hover:brightness-110 active:brightness-90 \r\n    dark:shadow-[inset_0_1px_3px_0_rgba(255,255,255,0.1)] \r\n    dark:border-x-0 dark:border-t-0 dark:border-blue-900/50 \r\n    dark:ring-white/5 dark:from-blue-700 dark:to-blue-600\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {isSubmitting ? \"Processing...\" : \"Login\"}\r\n        </Button>\r\n\r\n        <div className=\"mt-4 text-center text-sm text-gray-600 dark:text-zinc-400\">\r\n          Don&apos;t have an account?{\" \"}\r\n          <Link\r\n            href=\"/signup\"\r\n            className=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-500 dark:hover:text-blue-400\"\r\n          >\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n",
      "path": "block/AuthCard/authcard-04/authcard.tsx",
      "target": "components/block/AuthCard/authcard-04/authcard.tsx"
    }
  ]
}