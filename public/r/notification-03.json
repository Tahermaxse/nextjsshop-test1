{
  "name": "notification-03",
  "type": "registry:block",
  "registryDependencies": [
    "button",
    "dropdown-menu"
  ],
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "'use client';\r\n\r\nimport { Bell } from \"lucide-react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuSeparator,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface Notification {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  time: string;\r\n  read: boolean;\r\n}\r\n\r\nexport function Notification03() {\r\n  const [notifications, setNotifications] = useState<Notification[]>([\r\n    {\r\n      id: \"1\",\r\n      title: \"Performance Review Due\",\r\n      description: \"5 team members need Q4 evaluation\",\r\n      time: \"15 minutes ago\",\r\n      read: false,\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Onboarding Status\",\r\n      description: \"New hire documentation pending for James\",\r\n      time: \"1 hour ago\",\r\n      read: false,\r\n    },\r\n  ]);\r\n\r\n  const [filter, setFilter] = useState<\"all\" | \"unread\">(\"all\");\r\n  const unreadCount = notifications.filter((n) => !n.read).length;\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications(notifications.map((n) => ({ ...n, read: true })));\r\n  };\r\n\r\n  const filteredNotifications = notifications.filter((n) => \r\n    filter === \"all\" ? true : !n.read\r\n  );\r\n\r\n  return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          className=\"relative rounded-full h-10 w-10 sm:h-12 sm:w-12 bg-white dark:bg-zinc-900 border-slate-200 dark:border-zinc-800\"\r\n        >\r\n          <Bell className=\"h-5 w-5\" />\r\n          {unreadCount > 0 && (\r\n            <span className=\"absolute top-0 right-0 h-2 w-2 rounded-full bg-blue-600\" />\r\n          )}\r\n        </Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent\r\n        className=\"w-[380px] p-4\"\r\n        align=\"end\"\r\n      >\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-lg font-semibold\">Notifications</h2>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={markAllAsRead}\r\n            className=\"text-sm text-muted-foreground hover:text-foreground\"\r\n          >\r\n            Mark all as read\r\n          </Button>\r\n        </div>\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <Button\r\n            variant={filter === \"all\" ? \"secondary\" : \"ghost\"}\r\n            size=\"sm\"\r\n            onClick={() => setFilter(\"all\")}\r\n            className=\"text-sm\"\r\n          >\r\n            All\r\n          </Button>\r\n          <Button\r\n            variant={filter === \"unread\" ? \"secondary\" : \"ghost\"}\r\n            size=\"sm\"\r\n            onClick={() => setFilter(\"unread\")}\r\n            className=\"text-sm\"\r\n          >\r\n            Unread\r\n          </Button>\r\n        </div>\r\n        <div className=\"space-y-4 max-h-[300px] overflow-y-auto\">\r\n          {filteredNotifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={cn(\r\n                \"flex items-start gap-4 p-2 rounded-lg transition-colors\",\r\n                !notification.read && \"bg-muted/50\"\r\n              )}\r\n            >\r\n              <div className=\"flex-1 space-y-1\">\r\n                <p className=\"font-medium leading-none\">{notification.title}</p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {notification.description}\r\n                </p>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {notification.time}\r\n                </p>\r\n              </div>\r\n              {!notification.read && (\r\n                <div className=\"w-2 h-2 rounded-full bg-blue-600 mt-2\" />\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  );\r\n}",
      "path": "block/Notification/notification-03/notification.tsx",
      "target": "components/block/Notification/notification-03/notification.tsx"
    },
    {
      "type": "registry:block",
      "content": "import { Notification03 } from \"./notification\"\r\n\r\nexport default function Demo03() {\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center p-4 bg-inherit dark:bg-zinc-950\">\r\n      <div className=\"flex flex-col items-center gap-8\">\r\n        <Notification03 />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "path": "block/Notification/notification-03/demo.tsx",
      "target": "components/block/Notification/notification-03/demo.tsx"
    }
  ]
}